/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/me3.glb --keepnames --meta --types 
*/

import * as THREE from 'three'
import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_0002: THREE.Mesh
  }
  materials: {
    ['Material_0.002']: THREE.MeshStandardMaterial
  }
}

const Me3 = forwardRef((props: JSX.IntrinsicElements['group'], ref) => {
  const { nodes, materials } = useGLTF('/me3.glb') as GLTFResult
  return (
    <group ref={ref as any} {...props} dispose={null}>
      <mesh
        name='Mesh_0002'
        geometry={nodes.Mesh_0002.geometry}
        material={materials['Material_0.002']}
        userData={{ name: 'Mesh_0.002' }}
      />
    </group>
  )
})

useGLTF.preload('/me3.glb')

export default Me3
