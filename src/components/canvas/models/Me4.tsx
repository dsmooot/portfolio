/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 ./public/me4.glb --keepnames --meta --types 
*/

import * as THREE from 'three'
import React, { forwardRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import MarbleShader from '../shaders/MarbleShader/MarbleShader'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_0003: THREE.Mesh
  }
  materials: {
    ['Material_0.003']: THREE.MeshStandardMaterial
  }
}

const Me4 = forwardRef((props: JSX.IntrinsicElements['group'], ref) => {
  const { nodes, materials } = useGLTF('/me4.glb') as GLTFResult
  const tex = useTexture('/img/waves-dark.png')
  return (
    <group ref={ref as any} {...props} dispose={null}>
      <mesh
        name='Mesh_0003'
        geometry={nodes.Mesh_0003.geometry}
        material={materials['Material_0.003']}
        userData={{ name: 'Mesh_0.003' }}
      >
        {/* <meshStandardMaterial map={tex} /> */}
        {/* <MarbleShader /> */}
      </mesh>
    </group>
  )
})

useGLTF.preload('/me4.glb')

export default Me4
