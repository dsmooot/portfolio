/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/me.glb --keepnames --meta --types 
*/

import * as THREE from 'three'
import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Mesh_0: THREE.Mesh
  }
  materials: {
    Material_0: THREE.MeshStandardMaterial
  }
}

const Me = forwardRef((props: JSX.IntrinsicElements['group'], ref) => {
  const { nodes, materials } = useGLTF('/me.glb') as GLTFResult
  return (
    <group ref={ref as any} {...props} dispose={null}>
      <mesh
        name='Mesh_0'
        geometry={nodes.Mesh_0.geometry}
        material={materials.Material_0}
        userData={{ name: 'Mesh_0' }}
      />
    </group>
  )
})

export default Me

useGLTF.preload('/me.glb')
